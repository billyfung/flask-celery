version: "3.7"
services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
        - "5000:5000"
    volumes:
        - .:/app
    depends_on:
        - redis
    command: python app/app.py
    networks:
      - webnet
  worker:
    build:
      context: ./task-queue
      dockerfile: Dockerfile
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - db
    networks:
      - webnet
  monitor:
    build:
      context: ./task-queue
      dockerfile: Dockerfile
    ports:
     - "5555:5555"
    entrypoint: flower
    command:  -A tasks --port=5555 --broker=redis://redis:6379/0
    depends_on:
      - redis
      - worker
    networks:
      - webnet
  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - webnet
  db:
    container_name: db
    restart: always
    image: postgres:10
    environment:
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=testdb
    volumes:
      - ./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
    ports:
      - "5432:5432"
    networks:
      - webnet

networks:
  webnet: